/*****************************************************************************
* This file is provided under the Creative Commons Attribution 3.0 license.
*
* You are free to share, copy, distribute, transmit, or adapt this work
* PROVIDED THAT you attribute the work to the authors listed below.
* For more information, please see the following web page:
* http://creativecommons.org/licenses/by/3.0/
*
* This file is a component of the Sleipnir library for functional genomics,
* authored by:
* Curtis Huttenhower (chuttenh@princeton.edu)
* Mark Schroeder
* Maria D. Chikina
* Olga G. Troyanskaya (ogt@princeton.edu, primary contact)
*
* If you use this library, the included executable tools, or any related
* code in your work, please cite the following publication:
* Curtis Huttenhower, Mark Schroeder, Maria D. Chikina, and
* Olga G. Troyanskaya.
* "The Sleipnir library for computational functional genomics"
*****************************************************************************/
#include "stdafx.h"

/*!
 * \page Dat2Graph Dat2Graph
 * 
 * Dat2Graph processes an input DAT/DAB into a visual graph representation in one of several possible
 * formats.  Optionall, the DAT/DAB can also be normalized, filtered, or queried using the bioPIXIE or
 * HEFalMp algorithms to inspect the neighborhood around a given gene set.
 * 
 * \section sec_usage Usage
 * 
 * \subsection ssec_usage_basic Basic Usage
 * 
 * \code
 * Dat2Graph -i <data.dab> -e <cutoff>
 * \endcode
 * 
 * Output (to standard output) a DOT file containing all edges in \c data.dab greater than \c cutoff
 * (and the nodes to which they are incident).
 * 
 * \code
 * Dat2Graph -i <data.dab> -q <genes.txt> [-l <colors.txt>] [-b <borders.txt>]
 * \endcode
 * 
 * Output a DOT file containing the subgraph of \c data.dab resulting from using the gene list in
 * \c genes.txt as a HEFalMp query, with nodes optionally colored using the [0,1] values from \c colors.txt
 * or given optional border widths using the pixel counts in \c borders.txt.
 * 
 * \code
 * Dat2Graph -i <data.dab> -t dat -q <genes.txt> -a
 * \endcode
 * 
 * Output a DAT file containing the subgraph of \c data.dab resulting from using the gene list in
 * \c genes.txt as a bioPIXIE query.
 * 
 * \subsection ssec_usage_detailed Detailed Usage
 * 
 * \include Dat2Graph/Dat2Graph.ggo
 * 
 * <table><tr>
 *	<th>Flag</th>
 *	<th>Default</th>
 *	<th>Type</th>
 *	<th>Description</th>
 * </tr><tr>
 *	<td>-i</td>
 *	<td>stdin</td>
 *	<td>DAT/DAB file</td>
 *	<td>Input DAT/DAB file.</td>
 * </tr><tr>
 *	<td>-t</td>
 *	<td>dot</td>
 *	<td>dot, gdf, net, matisse, list, dat, or correl</td>
 *	<td>Output format.  \c dot produces a Graphviz DOT, \c gdf a GUESS GDF, \c net a NET file, \c matisse a
 *		MATISSE file, \c list a list of genes that would be in the output graph, \c dat a DAT of edges that
 *		would be in the output graph, and \c correl outputs the correlation between each gene's average
 *		edge vector to the query and that gene's edge vector to all genes.</td>
 * </tr><tr>
 *	<td>-q</td>
 *	<td>None</td>
 *	<td>Gene text file</td>
 *	<td>If given, output graph is generated by performing a bioPIXIE or HEFalMp query against the input
 *		DAT/DAB using the requested gene set.</td>
 * </tr><tr>
 *	<td>-k</td>
 *	<td>-1</td>
 *	<td>Integer</td>
 *	<td>Number of neighbor genes to be included with the query in a bioPIXIE or HEFalMp result.  If -1, the
 *		algorithm's default value is used.</td>
 * </tr><tr>
 *	<td>-a</td>
 *	<td>on</td>
 *	<td>Flag</td>
 *	<td>If on, perform a HEFalMp ratio query; if off, perform a bioPIXIE maximum sum query.</td>
 * </tr><tr>
 *	<td>-d</td>
 *	<td>1</td>
 *	<td>Double</td>
 *	<td>Dictates how aggressively edges are removed from the results of a bioPIXIE or HEFalMp query.  Larger
 *		values remove more edges, smaller values (can be negative) remove fewer.</td>
 * </tr><tr>
 *	<td>-e</td>
 *	<td>None</td>
 *	<td>Double</td>
 *	<td>If given, remove all input edges below the given cutoff (after optional normalization).</td>
 * </tr><tr>
 *	<td>-g</td>
 *	<td>None</td>
 *	<td>Text gene list</td>
 *	<td>If given, use only gene pairs for which both genes are in the list.  For details, see
 *		Sleipnir::CDat::FilterGenes.</td>
 * </tr><tr>
 *	<td>-w</td>
 *	<td>None</td>
 *	<td>DAT/DAB file</td>
 *	<td>If given, ignore all edges present in the given DAT/DAB file during graph generation.</td>
 * </tr><tr>
 *	<td>-f</td>
 *	<td>None</td>
 *	<td>SGD features text file</td>
 *	<td>If given, use gene names from the given SGD_features.tab file to label graph nodes.</td>
 * </tr><tr>
 *	<td>-l</td>
 *	<td>None</td>
 *	<td>Text file</td>
 *	<td>If given, text file containing one floating point value per line; must contain exactly one line
 *		per node in the output graph.  These values are used to scale between cyan (0), white (0.5), and
 *		yellow (1) node colors.</td>
 * </tr><tr>
 *	<td>-b</td>
 *	<td>None</td>
 *	<td>Text file</td>
 *	<td>If given, text file containing one floating point value per line; must contain exactly one line
 *		per node in the output graph.  These values are used to determine the border width (in pixels) of
 *		each node.</td>
 * </tr><tr>
 *	<td>-n</td>
 *	<td>off</td>
 *	<td>Flag</td>
 *	<td>If on, normalize input edges to the range [0,1] before processing.</td>
 * </tr><tr>
 *	<td>-m</td>
 *	<td>off</td>
 *	<td>Flag</td>
 *	<td>If given, memory map the input files when possible.  DAT and PCL inputs cannot be memmapped.</td>
 * </tr></table>
 */
